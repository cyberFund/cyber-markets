version: "2"
services:
  connector:
    build:
      # specify context - root folder of project
      context: ../
      dockerfile: ./devops/connectors/Dockerfile
    restart: always
    environment:
      KAFKA_CONNECTION: "kafka:9092"
      CONNECTORS_DEBUG: "false"
    depends_on:
      - kafka
  client-api:
    build:
      # specify context - root folder of project
      context: ../
      dockerfile: ./devops/client-api/Dockerfile
    restart: always
    ports:
      - "8082:8082"
    environment:
      KAFKA_CONNECTION: "kafka:9092"
    depends_on:
      - kafka
  zoo1:
    image: zookeeper:3.4.10
    restart: always
    container_name: cm_zookeeper1
    ports:
     - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    volumes:
     - $CYBER_MARKETS_APPLICATION_DATA/zookeeper1/data:/data
     - $CYBER_MARKETS_APPLICATION_DATA/zookeeper1/datalog:/datalog
  zoo2:
    image: zookeeper:3.4.10
    restart: always
    container_name: cm_zookeeper2
    ports:
     - "2182:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    volumes:
     - $CYBER_MARKETS_APPLICATION_DATA/zookeeper2/data:/data
     - $CYBER_MARKETS_APPLICATION_DATA/zookeeper2/datalog:/datalog
  zoo3:
    image: zookeeper:3.4.10
    restart: always
    container_name: cm_zookeeper3
    ports:
     - "2183:2181"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    volumes:
     - $CYBER_MARKETS_APPLICATION_DATA/zookeeper3/data:/data
     - $CYBER_MARKETS_APPLICATION_DATA/zookeeper3/datalog:/datalog
  kafka:
    image: wurstmeister/kafka:0.11.0.0
    restart: always
    container_name: cm_kafka
    ports:
     - "9092:9092"
     - "1099:1099"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zoo1
      - zoo2
      - zoo3
  kafka_manager:
    image: sheepkiller/kafka-manager
    ports:
      - "9000:9000"
    depends_on:
      - kafka
    environment:
      ZK_HOSTS: "zoo1:2181,zoo2:2182,zoo3:2183"
      APPLICATION_SECRET: "dilbert"