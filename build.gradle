/* Gradle plugins part */
buildscript {
    ext {
        kotlinVersion = "1.1.3-2"
        kotlinCoroutinesVersion = "0.17"
        jacksonVersion = "2.8.9"
        okhttpVersion = "3.8.1"
        undertowVersion = "1.4.18.Final"
        kafkaClientsVersion = "0.11.0.0"

        // tests
        junitVersion = "5.0.0-RC2"
        junitPlatformVersion = "1.0.0-RC2"
        mockitoVersion = "2.1.0"
        mockitoKotlinVersion = "0.7.0"

        // logs
        slf4jVersion = "1.7.25"
        lockbackVersion = "1.2.3"
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.junit.platform:junit-platform-gradle-plugin:${junitPlatformVersion}")
    }
}


subprojects {
/* Gradle plugins settings part */
    apply plugin: "kotlin"
    apply plugin: "org.junit.platform.gradle.plugin"


    kotlin {
        experimental {
            coroutines "enable"
        }
    }

/* Java dependencies part */
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        compile("org.slf4j:jcl-over-slf4j:$slf4jVersion")
        compile("ch.qos.logback:logback-classic:$lockbackVersion")

        compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion")
        compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
        compile("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinCoroutinesVersion")

        compile("com.squareup.okhttp3:okhttp:${okhttpVersion}")
        compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
        compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")

        compile("org.apache.kafka:kafka-clients:${kafkaClientsVersion}")

        testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
        testCompile("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
        testCompile("org.mockito:mockito-core:${mockitoVersion}")
        testCompile "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
        testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    }
}

project(":connectors") {
    apply plugin: "application"

    dependencies {
        compile(project(":core"))
        compile("io.undertow:undertow-core:$undertowVersion")
    }

    mainClassName = "fund.cyber.markets.connectors.ConnectorsApplicationKt"

    run {
        systemProperties System.getProperties()
    }
}

project(":core") {
    dependencies {
        compile("io.undertow:undertow-core:$undertowVersion")
    }
}

project(":stream-api") {
    apply plugin: "application"

    dependencies {
        compile(project(":core"))
        compile("io.undertow:undertow-core:$undertowVersion")
    }

    mainClassName = "fund.cyber.markets.StreamApiApplication"
}

project(":stream-processing") {
    dependencies {
    }
}
